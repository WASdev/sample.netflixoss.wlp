apply plugin: 'maven'
apply plugin: 'java'

defaultTasks 'buildEsa', 'install'

repositories {
    mavenCentral()
}

configurations {
    bundles 
}

dependencies {
    bundles project(path: ':ws-archaius', configuration: 'bundle')
    bundles project(path: ':ws-hystrix', configuration: 'bundle')
    bundles project(path: ':ws-netflixoss-base', configuration: 'bundle')
    bundles project(path: ':ws-eureka', configuration: 'bundle')
    bundles project(path: ':ws-eureka-lies', configuration: 'bundle')

    // Overprovisioning like this creates a feature.esa that featureManager won't install:
    //
    //   bundles ('com.netflix.eureka:eureka-client:1.1.132')  
    //
    // For now, we must only put proper bundles in the feature. 
    // The best way to do this would be to examine every file pulled in by 
    // com.netflix.eureka:eureka-client:1.1.132 and only select those that are bundles - 
    // i.e. have a header, 
    //
    //    Bundle-ManifestVersion: 2 
    //
    // I don't know how to write this code in gradle :-(

    bundles ( 'com.google.code.gson:gson:2.1' ) { transitive=false }
    bundles ( 'com.google.guava:guava:14.0.1' ) { transitive=false }
    bundles ( 'com.google.inject:guice:3.0' ) { transitive=false }
    bundles ( 'com.google.inject.extensions:guice-assistedinject:3.0' ) { transitive = false } 
    bundles ( 'com.google.inject.extensions:guice-grapher:3.0' ) { transitive = false } 
    bundles ( 'com.google.inject.extensions:guice-multibindings:3.0' ) { transitive = false } 
    bundles ( 'com.netflix.rxjava:rxjava-core:0.20.4' ) { transitive = false } 
    bundles ( 'com.sun.jersey:jersey-client:1.11' ) { transitive = false } 
    bundles ( 'com.sun.jersey:jersey-core:1.11' ) { transitive = false } 
    bundles ( 'org.codehaus.jackson:jackson-core-asl:1.9.11' ) { transitive = false } 
    bundles ( 'org.codehaus.jackson:jackson-mapper-asl:1.9.11' ) { transitive = false } 
    bundles ( 'joda-time:joda-time:2.3' ) { transitive = false } 
    bundles ( 'commons-codec:commons-codec:1.6' ) { transitive = false } 
    bundles ( 'commons-collections:commons-collections:3.2.1' ) { transitive = false } 
    bundles ( 'commons-lang:commons-lang:2.6' ) { transitive = false } 
    bundles ( 'org.apache.commons:commons-math:2.2' ) { transitive = false } 
    bundles ( 'org.apache.xbean:xbean-bundleutils:3.11.1' ) { transitive = false } 
    bundles ( 'org.apache.xbean:xbean-finder:3.11.1' ) { transitive = false } 
    bundles ( 'org.codehaus.jettison:jettison:1.2' ) { transitive = false } 
    bundles ( 'org.hibernate:hibernate-validator:4.1.0.Final' ) { transitive = false } 
    bundles ( 'org.slf4j:slf4j-api:1.7.6' ) { transitive = false } 
    bundles ( 'org.slf4j:slf4j-jdk14:1.6.4' ) { transitive = false } 
    bundles ( 'commons-configuration:commons-configuration:1.8' ) { transitive = false } 
    bundles ( 'commons-digester:commons-digester:2.1' ) { transitive = false } 
    bundles ( 'org.apache.commons:commons-jexl:2.1.1' ) { transitive = false } 
    bundles ( 'commons-jxpath:commons-jxpath:1.3' ) { transitive = false } 
	bundles ( 'com.fasterxml.jackson.core:jackson-core:2.4.3' ) { transitive = false } 
	bundles ( 'com.fasterxml.jackson.core:jackson-databind:2.4.3' ) { transitive = false }
	bundles ( 'com.fasterxml.jackson.core:jackson-annotations:2.4.0' ) { transitive = false }
	bundles ( 'com.fasterxml.jackson.core:jackson-core:2.4.3' ) { transitive = false }
	bundles ( 'com.google.code.findbugs:annotations:2.0.0' ) { transitive = false }
	
}

task copyManifest(type: Copy) {
    from 'src/main/resources'
    into "${project.buildDir}/resources/main"
    expand version: project.version
}

task buildEsa (dependsOn: [configurations.bundles, copyManifest], type: Zip) {
    archiveName = "${project.name}_${project.version}.esa"
    destinationDir = file("${project.buildDir}/libs")
    from { configurations.bundles.collect { it } }
    from "${project.buildDir}/resources/main"
}

configurations { feature }
artifacts { feature buildEsa }
artifacts { archives file("${project.buildDir}/libs/${project.name}_${project.version}.esa") }
